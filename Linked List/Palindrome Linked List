Given the head of a singly linked list, return true if it is a 
palindrome
 or false otherwise.

 

Example 1:


Input: head = [1,2,2,1]
Output: true
Example 2:


Input: head = [1,2]
Output: false

Ans.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* temp = head;
        vector<int> res;
        while(temp!=NULL){
            res.push_back(temp->val);
            temp = temp->next;
        }
        int first = 0;
        int last = res.size()-1;
        bool b = true;
        while(first<=last){
            if(res[first]!=res[last]){
                b= false;
                break;
            }
            first++;
            last--;
        }
        return b;

    }
};
